// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userfeed.proto

/*
Package userfeed is a generated protocol buffer package.

It is generated from these files:
	userfeed.proto

It has these top-level messages:
	Order
	DayOrders
*/
package userfeed

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 订单支付状态
type Order_Status int32

const (
	Order_SUCCESS Order_Status = 0
	Order_FAIL    Order_Status = 1
	Order_GIVEUP  Order_Status = 2
)

var Order_Status_name = map[int32]string{
	0: "SUCCESS",
	1: "FAIL",
	2: "GIVEUP",
}
var Order_Status_value = map[string]int32{
	"SUCCESS": 0,
	"FAIL":    1,
	"GIVEUP":  2,
}

func (x Order_Status) String() string {
	return proto.EnumName(Order_Status_name, int32(x))
}
func (Order_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Order struct {
	Userid   string             `protobuf:"bytes,1,opt,name=userid" json:"userid,omitempty"`
	Recordid int32              `protobuf:"varint,2,opt,name=recordid" json:"recordid,omitempty"`
	Actid    int32              `protobuf:"varint,3,opt,name=actid" json:"actid,omitempty"`
	Methods  []*Order_PayMethod `protobuf:"bytes,4,rep,name=methods" json:"methods,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Order) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *Order) GetRecordid() int32 {
	if m != nil {
		return m.Recordid
	}
	return 0
}

func (m *Order) GetActid() int32 {
	if m != nil {
		return m.Actid
	}
	return 0
}

func (m *Order) GetMethods() []*Order_PayMethod {
	if m != nil {
		return m.Methods
	}
	return nil
}

// 支付方式
type Order_PayMethod struct {
	Type   string       `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Result Order_Status `protobuf:"varint,2,opt,name=result,enum=userfeed.Order_Status" json:"result,omitempty"`
}

func (m *Order_PayMethod) Reset()                    { *m = Order_PayMethod{} }
func (m *Order_PayMethod) String() string            { return proto.CompactTextString(m) }
func (*Order_PayMethod) ProtoMessage()               {}
func (*Order_PayMethod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Order_PayMethod) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Order_PayMethod) GetResult() Order_Status {
	if m != nil {
		return m.Result
	}
	return Order_SUCCESS
}

type DayOrders struct {
	Order []*Order `protobuf:"bytes,1,rep,name=order" json:"order,omitempty"`
}

func (m *DayOrders) Reset()                    { *m = DayOrders{} }
func (m *DayOrders) String() string            { return proto.CompactTextString(m) }
func (*DayOrders) ProtoMessage()               {}
func (*DayOrders) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DayOrders) GetOrder() []*Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func init() {
	proto.RegisterType((*Order)(nil), "userfeed.Order")
	proto.RegisterType((*Order_PayMethod)(nil), "userfeed.Order.PayMethod")
	proto.RegisterType((*DayOrders)(nil), "userfeed.DayOrders")
	proto.RegisterEnum("userfeed.Order_Status", Order_Status_name, Order_Status_value)
}

func init() { proto.RegisterFile("userfeed.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xdd, 0x34, 0xd9, 0x26, 0x53, 0xa8, 0x61, 0x90, 0xb2, 0xf6, 0x14, 0x02, 0x42, 0x40,
	0xc8, 0x21, 0xfd, 0x05, 0x52, 0xab, 0x14, 0x94, 0x96, 0x0d, 0xf5, 0xbe, 0x76, 0x57, 0x0c, 0x28,
	0x5b, 0x76, 0x37, 0x87, 0xdc, 0xfd, 0xe1, 0xd2, 0x4d, 0x9a, 0x43, 0x6f, 0xf3, 0xbd, 0x79, 0xcc,
	0x7b, 0x0c, 0xcc, 0x5b, 0xab, 0xcc, 0x97, 0x52, 0xb2, 0x3c, 0x19, 0xed, 0x34, 0xc6, 0x17, 0xce,
	0xff, 0x02, 0x88, 0x76, 0x46, 0x2a, 0x83, 0x0b, 0xa0, 0x67, 0xb5, 0x91, 0x8c, 0x64, 0xa4, 0x48,
	0xf8, 0x40, 0xb8, 0x84, 0xd8, 0xa8, 0xa3, 0x36, 0xb2, 0x91, 0x2c, 0xc8, 0x48, 0x11, 0xf1, 0x91,
	0xf1, 0x0e, 0x22, 0x71, 0x74, 0x8d, 0x64, 0x13, 0xbf, 0xe8, 0x01, 0x57, 0x30, 0xfd, 0x55, 0xee,
	0x5b, 0x4b, 0xcb, 0xc2, 0x6c, 0x52, 0xcc, 0xaa, 0xfb, 0x72, 0xcc, 0xf7, 0x59, 0xe5, 0x5e, 0x74,
	0xef, 0xde, 0xc1, 0x2f, 0xce, 0xe5, 0x0e, 0x92, 0x51, 0x45, 0x84, 0xd0, 0x75, 0x27, 0x35, 0x34,
	0xf1, 0x33, 0x96, 0x40, 0x8d, 0xb2, 0xed, 0x8f, 0xf3, 0x2d, 0xe6, 0xd5, 0xe2, 0xfa, 0x68, 0xed,
	0x84, 0x6b, 0x2d, 0x1f, 0x5c, 0xf9, 0x23, 0xd0, 0x5e, 0xc1, 0x19, 0x4c, 0xeb, 0xc3, 0x7a, 0xbd,
	0xa9, 0xeb, 0xf4, 0x06, 0x63, 0x08, 0x5f, 0x9e, 0xb6, 0x6f, 0x29, 0x41, 0x00, 0xfa, 0xba, 0xfd,
	0xd8, 0x1c, 0xf6, 0x69, 0x90, 0x57, 0x90, 0x3c, 0x8b, 0xce, 0xdf, 0xb1, 0xf8, 0x00, 0x91, 0x3e,
	0x4f, 0x8c, 0xf8, 0xf6, 0xb7, 0x57, 0x41, 0xbc, 0xdf, 0x7e, 0x52, 0xff, 0xcb, 0xd5, 0x7f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x96, 0xad, 0x1a, 0xa8, 0x5d, 0x01, 0x00, 0x00,
}
